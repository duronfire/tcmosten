# Generated by Django 3.1.5 on 2021-01-11 00:57

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dummy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anrede', models.CharField(default='Herr', max_length=10)),
                ('vorname', models.CharField(default='defaultname', max_length=30)),
                ('nachname', models.CharField(default='defaultname', max_length=30)),
                ('geburtstag', models.DateField(default=datetime.date(4501, 1, 1))),
                ('start', models.DateTimeField(default=datetime.datetime(2021, 1, 11, 0, 57, 33, 103176))),
                ('end', models.DateTimeField(default=datetime.datetime(2021, 1, 11, 0, 57, 33, 103176))),
                ('kanton', models.CharField(blank=True, choices=[('SG', 'St.Gallen'), ('TG', 'Thurgau'), ('AI', 'Appenzell Innerrhoden'), ('AR', 'Appenzell Ausserrhoden'), ('ZH', 'Zürich'), ('BE', 'Bern'), ('UR', 'Uri'), ('SZ', 'Schwyz'), ('OW', 'Obwalden'), ('NW', 'Nidwalden'), ('GL', 'Glarus'), ('BL', 'Basel-Landschaft'), ('BS', 'Basel-Stadt'), ('SO', 'Solothurn'), ('FR', 'Freiburg'), ('ZG', 'Zug'), ('SH', 'Schaffhausen'), ('GR', 'Graubünden'), ('AG', 'Aargau'), ('JU', 'Jura'), ('GE', 'Genf'), ('NE', 'Neuenburg'), ('VS', 'Wallis'), ('VD', 'Waadt'), ('TI', 'Tessin')], default='SG', max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Habenkonto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kontonr', models.CharField(default='NA', max_length=10)),
                ('bezeichnung', models.CharField(default='NA', max_length=100)),
                ('bereich', models.CharField(default='NA', max_length=30)),
                ('klasse', models.CharField(default='NA', max_length=30)),
                ('hauptgruppe', models.CharField(default='NA', max_length=30)),
                ('gruppe', models.CharField(default='NA', max_length=30)),
                ('mwst', models.CharField(choices=[('ohne', 'ohne'), ('mit', 'mit')], default='ohne', max_length=10)),
                ('mwstsatz', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('saldo', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='http_test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(default='state', max_length=10)),
                ('pid', models.CharField(default='pid', max_length=150)),
                ('name', models.CharField(default='defaultname', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(default='St.Gallen', max_length=30)),
                ('country', models.CharField(default='Schweiz', max_length=30)),
                ('postalcode', models.CharField(default='9000', max_length=30)),
                ('street', models.CharField(default='Bahnhofpl. 1', max_length=50)),
                ('email', models.CharField(default='st.gallen@tcm-osten.ch', max_length=30)),
                ('telephone', models.CharField(default='071 223 8383', max_length=30)),
                ('mobile', models.CharField(default='076 627 0346', max_length=30)),
                ('Creation', models.DateTimeField(auto_now_add=True)),
                ('LastModified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mahnung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mahndatum', models.DateField(default=datetime.date(4501, 1, 1))),
                ('mahnungstyp', models.CharField(choices=[('Zahlungserinnerung', 'Zahlungserinnerung'), ('1.Mahnung', '1.Mahnung'), ('2.Mahnung', '2.Mahnung'), ('3.Mahnung', '3.Mahnung'), ('Inkasso', 'Inkasso')], default='Zahlungserinnerung', max_length=30)),
                ('mahngebuehren', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('Creation', models.DateTimeField(auto_now_add=True)),
                ('LastModified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EntryID', models.CharField(max_length=50)),
                ('Start', models.DateTimeField()),
                ('End', models.DateTimeField()),
                ('CreationTime', models.DateTimeField()),
                ('LastModificationTime', models.DateTimeField()),
                ('billstate', models.CharField(choices=[('nobill', 'nobill'), ('billed', 'billed'), ('paid', 'paid')], max_length=10)),
                ('lastbill', models.DateTimeField()),
                ('lastsync', models.DateTimeField()),
                ('apcategory', models.CharField(choices=[('behandelt', 'behandelt'), ('abwesend', 'abwesend'), ('abgesagt', 'abgesagt'), ('unbehandelt', 'unbehandelt'), ('krank', 'krank')], max_length=20)),
                ('aplabel', models.CharField(choices=[('kickoffnew', 'kickoffnew'), ('kickoffold', 'kickoffold'), ('followup', 'followup')], max_length=20)),
                ('archivelabel', models.CharField(choices=[('live', 'live'), ('archived', 'archived'), ('error', 'error')], max_length=20)),
                ('meetingnr', models.CharField(default='init', max_length=50)),
                ('betrag', models.DecimalField(decimal_places=2, max_digits=10)),
                ('treatmenttype', models.CharField(choices=[('Einzeltherapie', 'Einzeltherapie'), ('Gruppentherapie', 'Gruppentherapie')], max_length=30)),
                ('treatmentreason', models.CharField(choices=[('Krankheit', 'Krankheit'), ('Beschwerde', 'Beschwerde'), ('Geburtsvorbereitung', 'Geburtsvorbereitung'), ('Suchtentwöhnung', 'Suchtentwöhnung'), ('Schwangerschaft', 'Schwangerschaft'), ('Prävention', 'Prävention'), ('Unfall', 'Unfall'), ('Mutterschaft', 'Mutterschaft'), ('Geburtsgebrechen', 'Geburtsgebrechen')], max_length=30)),
                ('diagose', models.CharField(max_length=30)),
                ('role', models.CharField(max_length=50)),
                ('comment', models.CharField(max_length=500)),
                ('notice', models.CharField(max_length=10000)),
                ('LastModified', models.DateTimeField(auto_now=True)),
                ('synclabel', models.CharField(choices=[('toupdate', 'toupdate'), ('sync', 'sync')], default='sync', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Sollkonto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kontonr', models.CharField(default='NA', max_length=10)),
                ('bezeichnung', models.CharField(default='NA', max_length=100)),
                ('bereich', models.CharField(default='NA', max_length=30)),
                ('klasse', models.CharField(default='NA', max_length=30)),
                ('hauptgruppe', models.CharField(default='NA', max_length=30)),
                ('gruppe', models.CharField(default='NA', max_length=30)),
                ('mwst', models.CharField(choices=[('ohne', 'ohne'), ('mit', 'mit')], default='ohne', max_length=10)),
                ('mwstsatz', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('saldo', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FirstName', models.CharField(max_length=30)),
                ('LastName', models.CharField(max_length=30)),
                ('Birthday', models.DateField(default=datetime.date(4501, 1, 1))),
                ('Gender', models.CharField(choices=[('0', 'k.A.'), ('1', 'weiblich'), ('2', 'männlich'), ('3', 'divers')], default='0', max_length=30)),
                ('Email1Address', models.CharField(max_length=30)),
                ('MailingAddressCity', models.CharField(max_length=30)),
                ('MailingAddressCountry', models.CharField(max_length=30)),
                ('MailingAddressPostalCode', models.CharField(max_length=30)),
                ('MailingAddressStreet', models.CharField(max_length=30)),
                ('GovernmentIDNumber', models.CharField(default='NA', max_length=30)),
                ('Account', models.CharField(default='NA', max_length=30)),
                ('MobileTelephoneNumber', models.CharField(default='NA', max_length=30)),
                ('Role', models.CharField(choices=[('therapist', 'therapist'), ('assistant', 'assistant'), ('administrator', 'administrator'), ('others', 'others')], default='therapist', max_length=30)),
                ('Creation', models.DateTimeField(auto_now_add=True)),
                ('LastModified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Uploadfilepath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=1000)),
                ('name', models.CharField(max_length=255)),
                ('extname', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Versicherung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tarif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tarifnum', models.CharField(max_length=20)),
                ('ziffernum', models.CharField(max_length=20)),
                ('kategorie', models.CharField(max_length=20)),
                ('bezeichnung', models.CharField(max_length=250)),
                ('einheit', models.CharField(choices=[('Stk.', 'Stk.'), ('Min.', 'Min.')], max_length=25)),
                ('menge', models.DecimalField(decimal_places=2, max_digits=6)),
                ('ansatz', models.DecimalField(decimal_places=2, max_digits=6)),
                ('mwst', models.DecimalField(decimal_places=1, max_digits=3)),
                ('habenkonto', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.habenkonto')),
            ],
        ),
        migrations.CreateModel(
            name='Rechnung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rechnungsnr', models.CharField(default='init', max_length=50)),
                ('zahlungsart', models.CharField(choices=[('Rechnung', 'Rechnung'), ('Bar', 'Bar')], max_length=15)),
                ('art', models.CharField(choices=[('VVG', 'VVG'), ('UVG', 'UVG'), ('IV', 'IV'), ('SZ', 'SZ')], max_length=10)),
                ('rechnungsstand', models.CharField(choices=[('Rechnung', 'Rechnung'), ('Quittung', 'Quittung'), ('Zahlungserinnerung', 'Zahlungserinnerung'), ('1.Mahnung', '1.Mahnung'), ('2.Mahnung', '2.Mahnung'), ('3.Mahnung', '3.Mahnung'), ('Inkasso', 'Inkasso')], max_length=50)),
                ('betrag', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('totalbetrag', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('versicherungsnr', models.CharField(max_length=50)),
                ('eingangsdatum', models.DateField()),
                ('Creation', models.DateTimeField(auto_now_add=True)),
                ('LastModified', models.DateTimeField(auto_now=True)),
                ('mahnungen', models.ManyToManyField(blank=True, to='isys.Mahnung')),
                ('meetings', models.ManyToManyField(blank=True, to='isys.Meeting')),
                ('versicherung', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.versicherung')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EntryID', models.CharField(max_length=50)),
                ('FirstName', models.CharField(max_length=30)),
                ('LastName', models.CharField(max_length=30)),
                ('Birthday', models.DateField()),
                ('Gender', models.CharField(choices=[('0', 'k.A.'), ('1', 'weiblich'), ('2', 'männlich'), ('3', 'divers')], max_length=30)),
                ('CompanyName', models.CharField(max_length=30)),
                ('Title', models.CharField(blank=True, max_length=30)),
                ('JobTitle', models.CharField(max_length=30)),
                ('ReferredBy', models.CharField(max_length=30)),
                ('Email1Address', models.CharField(max_length=50)),
                ('MailingAddressCity', models.CharField(max_length=30)),
                ('MailingAddressCountry', models.CharField(max_length=30)),
                ('MailingAddressPostalCode', models.CharField(max_length=30)),
                ('MailingAddressStreet', models.CharField(max_length=50)),
                ('GovernmentIDNumber', models.CharField(max_length=30)),
                ('Account', models.CharField(max_length=50)),
                ('MobileTelephoneNumber', models.CharField(max_length=30)),
                ('HomeTelephoneNumber', models.CharField(max_length=30)),
                ('BusinessTelephoneNumber', models.CharField(max_length=30)),
                ('CreationTime', models.DateTimeField()),
                ('LastModificationTime', models.DateTimeField()),
                ('patientstate', models.CharField(choices=[('created', 'created'), ('new', 'new'), ('old', 'old'), ('oldnew', 'oldnew')], max_length=30)),
                ('lastsync', models.DateTimeField()),
                ('LastModified', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.location')),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anzahl', models.IntegerField()),
                ('tarif', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.tarif')),
            ],
        ),
        migrations.AddField(
            model_name='meeting',
            name='methods',
            field=models.ManyToManyField(blank=True, to='isys.Method'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.patient'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.staff'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='uploadfiles',
            field=models.ManyToManyField(blank=True, to='isys.Uploadfilepath'),
        ),
        migrations.CreateModel(
            name='Buchung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belegnr', models.CharField(default='NA', max_length=30)),
                ('belegdatum', models.DateField(default=datetime.date(4501, 1, 1))),
                ('buchungstext', models.CharField(max_length=200)),
                ('betrag', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('mwst', models.CharField(choices=[('ohne', 'ohne'), ('mit', 'mit')], default='ohne', max_length=10)),
                ('mwstsatz', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('Creation', models.DateTimeField(auto_now_add=True)),
                ('LastModified', models.DateTimeField(auto_now=True)),
                ('habenkonto', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.habenkonto')),
                ('sollkonto', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.sollkonto')),
            ],
        ),
        migrations.CreateModel(
            name='Bankkonto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kontoinhaber', models.CharField(max_length=50)),
                ('kontonr', models.CharField(max_length=50)),
                ('Creation', models.DateTimeField(auto_now_add=True)),
                ('LastModified', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='isys.patient')),
            ],
        ),
    ]
